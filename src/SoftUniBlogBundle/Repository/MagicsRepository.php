<?php

namespace SoftUniBlogBundle\Repository;

use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Mapping;
use SoftUniBlogBundle\Entity\Hero;
use SoftUniBlogBundle\Entity\Magics;
use SoftUniBlogBundle\Entity\Role;
use SoftUniBlogBundle\Entity\Types;
use Doctrine\ORM\OptimisticLockException;
/**
 * MagicsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MagicsRepository extends \Doctrine\ORM\EntityRepository
{
    public function __construct(EntityManagerInterface $em,
                                Mapping\ClassMetadata $metaData = null)
    {
        parent::__construct($em,
            $metaData === null ?
                new Mapping\ClassMetadata(Magics::class) :
                $metaData
        );
    }

    public function insert(Magics $magics){

        try {
            $this->_em->persist($magics);

            $this->_em->flush();

            return true;
        } catch (OptimisticLockException $e) {

            return false;
        }

    }
    public function findUnusedMagics($heroId)
    {

        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = null;
        $statement = $connection->prepare("SELECT m.* FROM magics AS m  WHERE m.id NOT in (
        select mh.magic_id from heroes_magics AS mh where mh.hero_id = :id)");
        $statement->bindValue('id', $heroId);
        $statement->execute();
        $results = $statement->fetchAll();

        return $results;
    }
}
